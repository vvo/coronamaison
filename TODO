This file is maintained by https://github.com/fabiospampinato/vscode-todo-plus, you can edit it manually too. If you're interested by one of the items, create an issue with it and discuss it.

Todo:
  ‚òê [Good contribution] add search by author with Algolia
    It should be possible to search by author name. Most authors are trying to find their drawings again so that would be nice to have that
    The rendering should be the same as the date listings so a lot can be reused with some refactoring I guess
  ‚òê [Good contribution] English version
  ‚òê [Good contribution] Add prev/next links on listings like dates
    We have roughly 30% of visitors that are not French
  ‚òê [Good contribution] Host drawings and coloring pages on Cloudinary
    Currently we optimize and store all images in the repository and on zeit/now. zeit/now has a 10,000 deployment files limitation. We're reaching this limit and will soon no more be able to push to production. We should upload drawings and coloring pages to cloudinary instead but keeping the drawings and coloringpages in the repository and ignoring them in `.nowignore`
    Keeping the drawings in the repository is important as the optimization and coloring pages generation takes a lot of time and can't be done at build time.
  ‚òê [Good contribution] Better menu, we're reaching so many dates that the menu starts to be hard to use. I would prefer to have the current month always opened and have other months folded.
  ‚òê [Good contribution] Add a random items page, this has been asked by project authors (Tim) as a way to discover images easily. Not sure what's the best way to do this though since the selection needs to be made at runtime, not buildtime. Maybe:
    Generate a specific stripped down drawingsById.json, minify it
    Downloads the full drawingsById.json from the frontend code
    Then choose random drawings from it and display them
  ‚òê Share on HN
    Once we have an English version, I'd like to try to share it on HN again
  ‚òê [UI] Go up button / or sticky sidebar
  ‚òê Credits all the tools used on the website (mkbitmap)
  Project:
    ‚úî README add instructions on how to run it yourself @done(20-04-19 09:06)
    ‚òê [Chore] We can get rid of the source information, it will always be twitter
    ‚òê Go with TypeScript, mostly I am curious about the dev editing experience in TypeScript
Archive:
  ‚úî Add a drawing page with share buttons, original tweet, version √† colorier @done(20-04-07 15:00) @project(Todo)
  ‚úî Add alt description and titles everywhere @done(20-04-07 15:00) @project(Todo)
  ‚úî In general, add more of "CoronaMaison" keyword (double check pages) @done(20-04-07 15:00) @project(Todo)
  ‚úî share buttons on all pages @done(20-04-07 15:00) @project(Todo.Website)
  ‚úî Click on drawing = drawing page @done(20-04-07 15:00) @project(Todo.Website)
  ‚úî Has drawing in full @done(20-04-07 15:00) @project(Todo.Drawing page)
  ‚úî Displays original tweet using embedded tweet @done(20-04-07 15:00) @project(Todo.Drawing page)
  ‚úî Has a feature to turn the drawing into full black/white for colouring page @done(20-04-07 15:00) @project(Todo.Drawing page)
  ‚úî Has a feature to print the drawing/colouring page @done(20-04-07 15:00) @project(Todo.Drawing page)
    Most important part is done, it's linked directly from the list page
  ‚úî Has feature to display large image (like https://pbs.twimg.com/media/ETaYWXEWoAQTCGU?format=jpg&name=large or https://pbs.twimg.com/media/ETaYWXEWoAQTCGU?format=jpg&name=4096x4096) @done(20-04-07 15:00) @project(Todo.Drawing page)
  ‚úî Update RT count in prepareData: https://developer.twitter.com/en/docs/tweets/post-and-engage/api-reference/get-statuses-lookup @done(20-04-01 21:43) @project(Todo.Data)
  ‚úî add page "√Ä propos" (original tweet from PenelopeB, source code link, how to manually add a drawing, how to remove a drawing...) @done(20-04-01 00:10) @project(Todo)
  ‚úî Je trouve pas mon dessin (que la premi√®re photo @done(20-04-01 00:10) @project(Todo)
  ‚úî croquis! @done(20-04-01 00:10) @project(Todo)
  ‚úî Et Instagram? @done(20-04-01 00:10) @project(Todo)
  ‚úî page √† colorier manuellement @done(20-04-01 00:10) @project(Todo)
  ‚úî add reference to // <a href="https://www.freepik.com/free-photos-vectors/background">Background vector created by freepik - www.freepik.com</a> for the background @done(20-04-01 00:10) @project(Todo)
  ‚úî my name, their name @done(20-04-01 00:10) @project(Todo)
  ‚úî other website @done(20-04-01 00:10) @project(Todo)
  ‚úî change the coloring version @done(20-04-01 00:10) @project(Todo)
  ‚úî twitter avatars issue @done(20-03-31 16:48) @project(Todo)
    fixed using https://twitter-avatar.now.sh/ :D
  ‚úî finish png optimization @done(20-03-31 15:55) @project(Todo)
  ‚úî find . -iname '*png' -exec pngout -y {} {} \; @done(20-03-31 15:55) @project(Todo)
  ‚úî Add pngout in preparedata @done(20-03-31 15:31) @project(Todo)
  ‚úî Feedback to zeit about moving a project @done(20-03-31 10:46) @project(Todo)
  ‚úî @done(20-03-31 10:46) @project(Todo)
  ‚úî Manual update: @done(20-03-31 15:51) @project(Todo)
  ‚úî https://twitter.com/Zoryall/status/1244918866100260864/photo/1 @done(20-03-31 15:51) @project(Todo)
  ‚úî https://twitter.com/messages/14908513-361910845 @done(20-03-31 15:51) @project(Todo)
  ‚úî new domain name (how to transfer?) @project(Todo.Website)
    coronamaison.net @done(20-03-31 11:50)
  ‚úî Deploy @done(20-03-30 23:09) @project(Todo)
  ‚úî Add search (to find your own drawing mostly :D) @done(20-03-30 23:10) @project(Maybe next features)
  ‚úî Create only two image variations @done(20-03-30 11:49) @project(Todo.Website)
  ‚úî add page "Je veux participer !" (explains how to do it) @done(20-03-29 23:22) @project(Todo.Website)
  ‚úî Drawings image should use srcset to only download the right image @done(20-03-30 11:49) @project(Todo.Website)
  ‚úî Drawings should use <picture's> onload event with https://github.com/CloudPower97/react-progressive-picture @done(20-03-30 11:49) @project(Todo.Website)
    handled via vanilla-lazyload
  ‚úò sitemap @project(Todo.Before launch)
    not needed for simple websites: https://www.imarc.com/blog/do-sites-really-need-a-sitemap-for-seo @cancelled(20-03-29 23:08)
  ‚úî native lazy + placeholder ? (delay) @done(20-03-29 22:02) @project(Todo.Before launch)
  ‚úî blur effect appear @done(20-03-29 22:02) @project(Todo.Before launch)
  ‚úî Code splitting Next.js + svg inline? search issues or create discussion @done(20-03-29 22:09) @project(Todo.Before launch)
  ‚úî change prefetch to only last date and add documentation to nextjs @done(20-03-29 22:09) @project(Todo.Before launch)
  ‚úî inline svgs @done(20-03-29 22:09) @project(Todo.Before launch)
  ‚úî reduce data sent in getStaticProps to the bare minimum @done(20-03-29 22:09) @project(Todo.Before launch)
  ‚úî remove unused modules from sqip @done(20-03-29 22:10) @project(Todo.Before launch)
  ‚úò whiter background @cancelled(20-03-29 22:17) @project(Todo.Before launch)
    I tried it, liked better the strong one :D
  ‚úò use preact @project(Todo.Before launch)
    not working @cancelled(20-03-29 22:25)
  ‚úî regenerate thumbnails low quality since no more needed to have lots of small pixels @done(20-03-29 22:26) @project(Todo.Before launch)
  ‚úî create and add favicon (like an emoji üé®) @done(20-03-29 22:26) @project(Todo.Website)
  ‚úò "better" UI @project(Maybe next features)
    good enough @cancelled(20-03-29 22:26)
  ‚úî Add transition between pixel and real version @done(20-03-29 22:26) @project(Maybe next features)
  ‚úî Manage to inline SVGs into pages without blowing out the build output size @done(20-03-29 22:26) @project(Maybe next features)
    it was because of prefetch
  ‚úî Share to websites publishing stories about that @done(20-03-27 16:46) @project(Todo.Launch)
  ‚úî Share to linkedin @done(20-03-27 16:03) @project(Todo.Launch)
  ‚úî Share to facebook @done(20-03-27 16:46) @project(Todo.Launch)
  ‚úî <meta> information for every page (different per page) @done(20-03-27 16:46) @project(Todo.Before launch)
  ‚úî Why Next.js downloads json files on [day].js? Search issues @done(20-03-27 16:46) @project(Todo.Before launch)
    Ok it's expected from the doc
  ‚úî Image size of thumbnails in html code @done(20-03-27 14:49) @project(Todo.Before launch)
  ‚úî ensure images are always stretched to full width @done(20-03-27 14:49) @project(Todo.Before launch)
  ‚úî Show avatar and username at the top of drawings instead of below @done(20-03-27 14:49) @project(Todo.Website)
  ‚úî Cache images locally and turn into webp @done(20-03-27 14:50) @project(Maybe next features)
  ‚úî host images locally in webp @done(20-03-27 01:51) @project(Todo.Before launch)
  ‚úî Download drawings in original size and save original file to the project (for archives) @done(20-03-27 11:30) @project(Todo.Website)
  ‚úî disable scroll on body when menu is opened (portrait mode has this issue) @done(20-03-27 00:18) @project(Todo.Before launch)
  ‚úî Add active on menu items @done(20-03-27 00:01) @project(Todo.Before launch)
  ‚úî Add simple analytics @done(20-03-26 21:47) @project(Todo.Before launch)
  ‚úî Menu on desktop should not be so far @done(20-03-26 21:47) @project(Todo.Before launch)
  ‚úò Instagram API @cancelled(20-03-26 23:28)
    There's no way we can use the Instagram API, they completely locked down their data (24 hours max)
  ‚úî Add mobile menu @done(20-03-26 15:20) @project(Todo.Before launch)
  ‚úî Add number of drawings in total (title) @done(20-03-25 23:11) @project(Todo.Data)
  ‚úî move db.json => data/drawings.json and git ignore @done(20-03-25 22:40) @project(Todo.Data)
  ‚úò Rename findDrawings to twitterSync @cancelled(20-03-25 22:40) @project(Todo.Data)
  ‚úî Remove twitter-cache.json @done(20-03-25 22:40) @project(Todo.Data)
  ‚úî Index page => most popular ones @done(20-03-25 22:41) @project(Todo.Website)
  ‚úò Rename twitter-drawings.json to twitter-sync.json @cancelled(20-03-25 18:02) @project(Todo.Data)
    file not used
  ‚úî Add a way to remove non relevant images @done(20-03-25 17:52) @project(Todo)
  ‚úî Add RT and FAV count to data as likes @done(20-03-25 17:52) @project(Todo)
  ‚úò Do not host the text ourselves, dispay the embedded tweet in the drawing page @cancelled(20-03-25 17:53) @project(Todo)
  ‚úî Rename prepareDatabase to prepareData @done(20-03-25 17:55) @project(Todo)
  ‚úî Add number of drawings per day @done(20-03-25 17:55) @project(Todo)
  ‚úò findDrawings: update to store directly by date arrays (drawings["2020-03-20"].push ...) @cancelled(20-03-25 17:56) @project(Todo)
  ‚úò findDrawings: update with luxon for sync dates to ensure we can run it easily @cancelled(20-03-25 17:56) @project(Todo)
  ‚úî Do not download image if it already exists @done(20-03-24 22:10) @project(Todo)
  ‚úî Do not host the images ourselves, load them from twitter @done(20-03-24 22:10) @project(Todo)
  ‚úî Generate menu and add navigation with real routes @done(20-03-24 22:45) @project(Todo)
  ‚úî Add number of drawings on the date object @done(20-03-24 22:56) @project(Todo)
  ‚úî Add number of drawings on the day page (xx dessins le ...) @done(20-03-24 22:56) @project(Todo)
  ‚úî stop using traces @done(20-03-25 17:51) @project(Todo)
  ‚úî generate image trace with sqip at prepareData @done(20-03-25 17:51) @project(Todo)
  ‚úî store previews in public @done(20-03-25 17:51) @project(Todo)
  ‚úî use react progressive to load them @done(20-03-25 17:51) @project(Todo)
  ‚úî git ignore db.json @done(20-03-24 21:25) @project(Todo)
  ‚úò sqlite + cache @cancelled(20-03-23 09:28) @project(Todo)
    using lowdb as a simple json database
  ‚úî generate all days @done(20-03-24 21:18) @project(Todo)
  ‚úî day by day navigation @done(20-03-24 21:20) @project(Todo)
  ‚úò add a script that takes in input a tweet id and add it to the database @cancelled(20-03-24 21:24) @project(Todo)
    let's wait for the need
  ‚úò show avatar, twitter username, date and time, text excerpt @cancelled(20-03-24 21:24) @project(Todo)
    done diferently
